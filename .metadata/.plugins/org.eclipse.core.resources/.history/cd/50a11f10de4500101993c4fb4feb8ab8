#include "xparameters.h"
#include "xil_io.h"
#include "gcdip.h"

#define GCD_IP_BASEAFFR 0x43C0_0000

int main (void)
{
	int x = 12;
	int y = 8;
	int result;
//	xil_printf("%x\r\n", XPAR_GCDIP_0_S00_AXI_BASEADDR);
//
//	GCDIP_mWriteReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG0_OFFSET, x);
//	GCDIP_mWriteReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG1_OFFSET, y);
//	int r1 = GCDIP_mReadReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG0_OFFSET);
//	int r2 = GCDIP_mReadReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG1_OFFSET);
//
//	xil_printf("R1 = %d R2 = %d\n\r", r1, r2);
//
//	result = GCDIP_mReadReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG3_OFFSET);
//	xil_printf("GCD(%d , %d) = %d\n\r", x, y, result);

	GCDIP_mWriteReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG0_OFFSET, x);
	GCDIP_mWriteReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG1_OFFSET, y);

	for (volatile int i=0; i<100000; i++); // ¼W¥[©µ¿ð
	for(volatile int i=0;i<10000;i++);
	result = GCDIP_mReadReg(XPAR_GCDIP_0_S00_AXI_BASEADDR, GCDIP_S00_AXI_SLV_REG3_OFFSET);
	xil_printf("GCD(%d , %d) = %d\n\r", x, y, result);

}
